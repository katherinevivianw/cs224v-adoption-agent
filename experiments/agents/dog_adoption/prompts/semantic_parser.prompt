<|startofinstruction|>
Your goal is to write python code statements using the given APIs and Databases based on the user utterance. Plan your response first, then generate the User Target.

Today's date is {{ date }} and the day is {{ day }}.

These are the APIs available to you:
{{ apis }}
answer(query: str)

The `answer` function can answer questions using the following database:
{{ dbs }}

You should NEVER create a new variable on your own. 
For example: `answer = answer("Where can I adopt a Dalmatian in Palo Alto")` is not allowed. 
You should directly write `answer("Where can I adopt a Dalmatian in Palo Alto")`.

You will be given:
- The state of the conversation, if present.
- The agent's action, if present.
- The last turn of the conversation.

Follow these guidelines:
- Set the `user_task` field of the `UserInfo` API to 'Adoption Search' when the user wants to search for a shelter.
- Use the `confirm()` function to confirm the user's restaurant choice when Agent Action has `AskForFieldConfirmation()`.
- When refering to an adoption listing, provide its `pet_id` in the `answer` query.
- You should update fields by using `api_name.field_name = value` if the user is update an API instance already present in the state.
- If the user refuses to confirm, set the field to `False`.
- If the user is chit-chatting, greeting or thanking, then just write: # Chit-chat, greeting or thanking.

Here are some examples:
Example: Without state being present.
State:
```
None
```
Agent Action:
```
None
```

Last-turn Conversation:
Agent: Hello! I'm DogAdoptionBot. I'm here to help you find adoption listings for a specified dog breed in your area. What would you like to do?
User: I want to search for a female maltese in a 100 mile radius of my zip code 92602

User Target:
```
UserInfo(user_task='Adoption Search')
AdoptionSearch(city_or_zip="92602", breed_str="Maltese", geo_range="100", sex="f")
--
Example: Whenever searching for adoptions, make sure to set user_task to 'Adoption Search'. Update a field, such as city_or_zip, if the user changes its value.
State:
```
adoption_listings = [
    AdoptionListing(pet_id='28112543', pet_name='Deken', age='adult', sex='m', size='Med. 26-60 lbs (12-27 kg)', primary_breed='Golden Retriever', secondary_breed='Border Collie', location='New York, NY', large_results_photo_url='https://pet-uploads-staging.adoptapet.com/9/1/b/475259652.jpg'), 
    AdoptionListing(pet_id='27973930', pet_name='Fred', age='puppy', sex='m', size='Med. 26-60 lbs (12-27 kg)', primary_breed='Golden Retriever', secondary_breed='German Shepherd Dog', location='Brooklyn, NY', large_results_photo_url='https://pet-uploads-staging.adoptapet.com/7/e/8/471605890.jpg')
]
adoption_search = AdoptionSearch(city_or_zip="New York, NY", breed_str="Golden Retriever", geo_range="100", sex="m", age="adult")
adoption_search.result = [adoption_listings[0]]
```
Agent Action:
```
[
    "ReportAgent(adoption_search.query, adoption_search.result)",
]
Last-turn Conversation:
Agent: I found the following Golden Retrievers in New York, NY:
- **Deken**, an adult male Golden Retriever-Border Collie mix in New York, NY. He is of size Med. 26-60 lbs (12-27 kg). Photo Link: https://pet-uploads-staging.adoptapet.com/9/1/b/475259652.jpg.
- **Fred**, a male Golden Retriver-German Shepherd puppy mix in Brooklyn, NY. He is of size Med. 26-60 lbs (12-27 kg). Photo Link: https://pet-uploads-staging.adoptapet.com/7/e/8/471605890.jpg.

Would you like to search for more adoption listings, or get information about a certain dog breed?

User: i don't want something in new york actually, can we search for palo alto, CA?

User Target: 
```
UserInfo(user_task='Adoption Search')
adoption_search.city_or_zip = "Palo Alto, CA"
```
--
Example: Always do what the user asks for first, irrespective of actions's action. If the asks for pricing information, use the `answer(query: str)` API to get the information.
State:
```
answer = answer(query="Find me dog breeds with low drooling and low shedding")
dog_breeds = ["Dachshund", "Poodle (Miniature)", "Shih Tzu", "Pomeranian"]
answer.result = [dog_breeds[0]]
```
Agent Action:
```
[
    "ReportAgent(answer.query, answer.result)",
    "ProposeWorksheet(AdoptionSearch, {"breed_str": dog_breeds[0]})"
]
```

Last-turn Conversation:
Agent: I have found the following dog breeds with low drooling and low shedding levels:
- Dachshund
- Poodle (Miniature)
- Shih Tzu
- Pomeranian
Would you like to search for adoption listings for one of these breeds? If so, please provide the breed you'd like to search for, your city or zip code, the number of miles you'd like to search for, and any additional constraints (such as sex or age).
User: I'd like to search for Pomeranians. My city is Palo Alto, CA, and I want to search within a 50 mile radius.

User Target: 
```
answer("Find me dog breeds with low drooling and low shedding")
AdoptionSearch(breed_str="Pomeranian", city="Palo Alto, CA", geo_range="50")
```
--
<|endofinstruction|>

<|startofinput|>
State:
```
{{ state }}
```
Agent Action:
```
{{ agent_actions }}
```

Last-turn Conversation:
Agent: {{ agent_utterance }}
User: {{ user_utterance }}

User Target:
<|endofinput|>